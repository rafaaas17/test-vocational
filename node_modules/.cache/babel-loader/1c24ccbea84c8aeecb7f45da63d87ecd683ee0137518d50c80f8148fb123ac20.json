{"ast":null,"code":"var _jsxFileName = \"/home/adminserver/vocational-test-app/src/components/TestFlow/TestFlow.jsx\";\nimport { Box, Card, Typography, Button, Container } from \"@mui/material\";\nimport ProgressBar from \"./ProgressBar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Question({\n  data,\n  onAnswer,\n  questionNumber,\n  total\n}) {\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"sm\",\n    sx: {\n      mt: 5\n    },\n    children: [/*#__PURE__*/_jsxDEV(ProgressBar, {\n      value: questionNumber / total * 100\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      sx: {\n        p: 4,\n        borderRadius: 3,\n        boxShadow: 3\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        color: \"#006400\",\n        gutterBottom: true,\n        children: [\"Pregunta \", questionNumber, \" de \", total]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        sx: {\n          mb: 3\n        },\n        children: data.question\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }, this), data.options.map((option, i) => /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        fullWidth: true,\n        sx: {\n          mb: 2,\n          backgroundColor: \"#90EE90\",\n          \":hover\": {\n            backgroundColor: \"#77d677\"\n          },\n          borderRadius: 2\n        },\n        onClick: () => onAnswer(option === data.answer),\n        children: option\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this);\n}\n_c = Question;\nvar _c;\n$RefreshReg$(_c, \"Question\");","map":{"version":3,"names":["Box","Card","Typography","Button","Container","ProgressBar","jsxDEV","_jsxDEV","Question","data","onAnswer","questionNumber","total","maxWidth","sx","mt","children","value","fileName","_jsxFileName","lineNumber","columnNumber","p","borderRadius","boxShadow","variant","color","gutterBottom","mb","question","options","map","option","i","fullWidth","backgroundColor","onClick","answer","_c","$RefreshReg$"],"sources":["/home/adminserver/vocational-test-app/src/components/TestFlow/TestFlow.jsx"],"sourcesContent":["import { Box, Card, Typography, Button, Container } from \"@mui/material\";\nimport ProgressBar from \"./ProgressBar\";\n\nexport default function Question({ data, onAnswer, questionNumber, total }) {\n  return (\n    <Container maxWidth=\"sm\" sx={{ mt: 5 }}>\n      <ProgressBar value={(questionNumber / total) * 100} />\n\n      <Card sx={{ p: 4, borderRadius: 3, boxShadow: 3 }}>\n        <Typography variant=\"h6\" color=\"#006400\" gutterBottom>\n          Pregunta {questionNumber} de {total}\n        </Typography>\n        <Typography variant=\"h5\" sx={{ mb: 3 }}>\n          {data.question}\n        </Typography>\n\n        {data.options.map((option, i) => (\n          <Button\n            key={i}\n            variant=\"contained\"\n            fullWidth\n            sx={{\n              mb: 2,\n              backgroundColor: \"#90EE90\",\n              \":hover\": { backgroundColor: \"#77d677\" },\n              borderRadius: 2\n            }}\n            onClick={() => onAnswer(option === data.answer)}\n          >\n            {option}\n          </Button>\n        ))}\n      </Card>\n    </Container>\n  );\n}\n"],"mappings":";AAAA,SAASA,GAAG,EAAEC,IAAI,EAAEC,UAAU,EAAEC,MAAM,EAAEC,SAAS,QAAQ,eAAe;AACxE,OAAOC,WAAW,MAAM,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,eAAe,SAASC,QAAQA,CAAC;EAAEC,IAAI;EAAEC,QAAQ;EAAEC,cAAc;EAAEC;AAAM,CAAC,EAAE;EAC1E,oBACEL,OAAA,CAACH,SAAS;IAACS,QAAQ,EAAC,IAAI;IAACC,EAAE,EAAE;MAAEC,EAAE,EAAE;IAAE,CAAE;IAAAC,QAAA,gBACrCT,OAAA,CAACF,WAAW;MAACY,KAAK,EAAGN,cAAc,GAAGC,KAAK,GAAI;IAAI;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAEtDd,OAAA,CAACN,IAAI;MAACa,EAAE,EAAE;QAAEQ,CAAC,EAAE,CAAC;QAAEC,YAAY,EAAE,CAAC;QAAEC,SAAS,EAAE;MAAE,CAAE;MAAAR,QAAA,gBAChDT,OAAA,CAACL,UAAU;QAACuB,OAAO,EAAC,IAAI;QAACC,KAAK,EAAC,SAAS;QAACC,YAAY;QAAAX,QAAA,GAAC,WAC3C,EAACL,cAAc,EAAC,MAAI,EAACC,KAAK;MAAA;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACzB,CAAC,eACbd,OAAA,CAACL,UAAU;QAACuB,OAAO,EAAC,IAAI;QAACX,EAAE,EAAE;UAAEc,EAAE,EAAE;QAAE,CAAE;QAAAZ,QAAA,EACpCP,IAAI,CAACoB;MAAQ;QAAAX,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACJ,CAAC,EAEZZ,IAAI,CAACqB,OAAO,CAACC,GAAG,CAAC,CAACC,MAAM,EAAEC,CAAC,kBAC1B1B,OAAA,CAACJ,MAAM;QAELsB,OAAO,EAAC,WAAW;QACnBS,SAAS;QACTpB,EAAE,EAAE;UACFc,EAAE,EAAE,CAAC;UACLO,eAAe,EAAE,SAAS;UAC1B,QAAQ,EAAE;YAAEA,eAAe,EAAE;UAAU,CAAC;UACxCZ,YAAY,EAAE;QAChB,CAAE;QACFa,OAAO,EAAEA,CAAA,KAAM1B,QAAQ,CAACsB,MAAM,KAAKvB,IAAI,CAAC4B,MAAM,CAAE;QAAArB,QAAA,EAE/CgB;MAAM,GAXFC,CAAC;QAAAf,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAYA,CACT,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEhB;AAACiB,EAAA,GAhCuB9B,QAAQ;AAAA,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}