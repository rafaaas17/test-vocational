{"ast":null,"code":"var _jsxFileName = \"/home/adminserver/vocational-test-app/src/components/TestFlow/TestFlow.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { Box, Card, Typography, Button, Container } from \"@mui/material\";\nimport ProgressBar from \"./ProgressBar\";\n\n// Ejemplo de preguntas\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst questions = [{\n  question: \"¿Cuál es tu color favorito?\",\n  options: [\"Rojo\", \"Azul\", \"Verde\", \"Amarillo\"],\n  answer: \"Azul\"\n}, {\n  question: \"¿Qué animal prefieres?\",\n  options: [\"Perro\", \"Gato\", \"Pájaro\", \"Pez\"],\n  answer: \"Perro\"\n}\n// ...más preguntas\n];\nexport default function TestFlow() {\n  _s();\n  const [current, setCurrent] = useState(0);\n  const handleAnswer = isCorrect => {\n    // Aquí puedes manejar la lógica de respuestas\n    if (current < questions.length - 1) {\n      setCurrent(current + 1);\n    } else {\n      // Redirigir a resultados o finalizar test\n    }\n  };\n  const data = questions[current];\n  if (!data) return null; // Previene el error\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"sm\",\n    sx: {\n      mt: 5\n    },\n    children: [/*#__PURE__*/_jsxDEV(ProgressBar, {\n      value: (current + 1) / questions.length * 100\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      sx: {\n        p: 4,\n        borderRadius: 3,\n        boxShadow: 3\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        color: \"#006400\",\n        gutterBottom: true,\n        children: [\"Pregunta \", current + 1, \" de \", questions.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        sx: {\n          mb: 3\n        },\n        children: data.question\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), data.options.map((option, i) => /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        fullWidth: true,\n        sx: {\n          mb: 2,\n          backgroundColor: \"#90EE90\",\n          \":hover\": {\n            backgroundColor: \"#77d677\"\n          },\n          borderRadius: 2\n        },\n        onClick: () => handleAnswer(option === data.answer),\n        children: option\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n_s(TestFlow, \"8+O75ArtRNvpQgzeZSk5wKohTHI=\");\n_c = TestFlow;\nvar _c;\n$RefreshReg$(_c, \"TestFlow\");","map":{"version":3,"names":["useState","Box","Card","Typography","Button","Container","ProgressBar","jsxDEV","_jsxDEV","questions","question","options","answer","TestFlow","_s","current","setCurrent","handleAnswer","isCorrect","length","data","maxWidth","sx","mt","children","value","fileName","_jsxFileName","lineNumber","columnNumber","p","borderRadius","boxShadow","variant","color","gutterBottom","mb","map","option","i","fullWidth","backgroundColor","onClick","_c","$RefreshReg$"],"sources":["/home/adminserver/vocational-test-app/src/components/TestFlow/TestFlow.jsx"],"sourcesContent":["import { useState } from \"react\";\nimport { Box, Card, Typography, Button, Container } from \"@mui/material\";\nimport ProgressBar from \"./ProgressBar\";\n\n// Ejemplo de preguntas\nconst questions = [\n  {\n    question: \"¿Cuál es tu color favorito?\",\n    options: [\"Rojo\", \"Azul\", \"Verde\", \"Amarillo\"],\n    answer: \"Azul\"\n  },\n  {\n    question: \"¿Qué animal prefieres?\",\n    options: [\"Perro\", \"Gato\", \"Pájaro\", \"Pez\"],\n    answer: \"Perro\"\n  }\n  // ...más preguntas\n];\n\nexport default function TestFlow() {\n  const [current, setCurrent] = useState(0);\n\n  const handleAnswer = (isCorrect) => {\n    // Aquí puedes manejar la lógica de respuestas\n    if (current < questions.length - 1) {\n      setCurrent(current + 1);\n    } else {\n      // Redirigir a resultados o finalizar test\n    }\n  };\n\n  const data = questions[current];\n\n  if (!data) return null; // Previene el error\n\n  return (\n    <Container maxWidth=\"sm\" sx={{ mt: 5 }}>\n      <ProgressBar value={((current + 1) / questions.length) * 100} />\n\n      <Card sx={{ p: 4, borderRadius: 3, boxShadow: 3 }}>\n        <Typography variant=\"h6\" color=\"#006400\" gutterBottom>\n          Pregunta {current + 1} de {questions.length}\n        </Typography>\n        <Typography variant=\"h5\" sx={{ mb: 3 }}>\n          {data.question}\n        </Typography>\n\n        {data.options.map((option, i) => (\n          <Button\n            key={i}\n            variant=\"contained\"\n            fullWidth\n            sx={{\n              mb: 2,\n              backgroundColor: \"#90EE90\",\n              \":hover\": { backgroundColor: \"#77d677\" },\n              borderRadius: 2\n            }}\n            onClick={() => handleAnswer(option === data.answer)}\n          >\n            {option}\n          </Button>\n        ))}\n      </Card>\n    </Container>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}